---
import Link from "../components/Link.astro";
import Layout from "../layouts/Layout.astro";

type Project = {
    name: string;
    description: string;
    link: string;
    langs: string[];
    video?: string[];
    img?: string[];
};

const portfolio: Array<{ name: string; projects: Array<Project> }> = [
    {
        name: "Open Source Contributions",
        projects: [
            {
                name: "neovim/node-client",
                description: "Nvim Node.js client and plugin host",
                link: "https://github.com/neovim/node-client",
                langs: ["ts"],
            },
            {
                name: "neovim/neovim-backup",
                description:
                    "Backup Neovim GitHub issues, comments, discussions, etc.",
                link: "https://github.com/neovim/neovim-backup",
                langs: ["bash"],
            },
            {
                name: "GoogleChromeLabs/squoosh",
                description:
                    "Make images smaller using best-in-class codecs, right in the browser.",
                link: "https://github.com/GoogleChromeLabs/squoosh",
                langs: ["ts"],
                img: ["squoosh.app_editor.avif"],
            },
        ],
    },
    {
        name: "Personal Projects",
        projects: [
            {
                name: "Yab",
                description:
                    "Cross-platform build tool with deterministic builds defined using Lua scripts.",
                link: "https://github.com/tsukinoko-kun/yab",
                langs: ["go"],
            },
            {
                name: "Oh My Gosh",
                description: "Cross platform implementation of a POSIX shell.",
                link: "https://github.com/tsukinoko-kun/ohmygosh",
                langs: ["go"],
            },
            {
                name: "Bloodmage Engine",
                description: "90s style 3D game engine built in Go using SDL2.",
                link: "https://github.com/bloodmagesoftware/bloodmage-engine",
                langs: ["go"],
                video: ["bloodmage_engine.webm"],
            },
            {
                name: "serve",
                description:
                    "A simple static file server with nice extras like auto-reload and markdown rendering.",
                link: "https://github.com/tsukinoko-kun/serve",
                langs: ["go"],
            },
            {
                name: "PaperMC Web API",
                description:
                    "Secure web api for Minecraft paper servers with OAuth2 and JWT.",
                link: "https://github.com/tsukinoko-kun/papermc-web-api",
                langs: ["java"],
            },
            {
                name: "Allybi",
                description:
                    "Educational game for the anti discrimination organization in Heilbronn.",
                link: "https://github.com/HHN-SEB-2022-23/allybi",
                langs: ["ts"],
                video: ["allybi.webm"],
            },
        ],
    },
];
---

<Layout title="Portfolio" desc="Software Engineer">
    <div class="surround-h1">
        <h1 class="tracking-tight text-5xl font-semibold">
            Hey,<br />
            I'm Frank
        </h1>
    </div>

    <p class="text-pretty">
        Software engineer from Germany who loves things that just work.
    </p>

    {
        portfolio.map((x) => (
            <section aria-labelledby="projects">
                <h2 id="projects" class="surround-h2 text-3xl font-semibold">
                    {x.name}
                </h2>
                <ul>
                    {x.projects.map((prj) => (
                        <li class="pl-8">
                            <Link href={prj.link} hover>
                                <h3 class="text-xl font-semibold surround-h3">
                                    {prj.name}
                                </h3>
                                <p class="text-pretty">{prj.description}</p>
                                <p>
                                    {prj.langs.length > 1
                                        ? "Languages: "
                                        : "Language: "}
                                    {prj.langs.map((lang) => (
                                        <img
                                            class="inline-block w-6 h-6 mr-1"
                                            decoding="async"
                                            loading="lazy"
                                            src={"/lang/" + lang + ".svg"}
                                            alt={lang}
                                        />
                                    ))}
                                </p>
                                {prj.video || prj.img ? (
                                    <ul class="flex flex-row mt-2">
                                        {prj.video
                                            ? prj.video.map((v) => (
                                                  <li class="w-9/12 md:w-1/4 hover:scale-150 transition-transform">
                                                      <video
                                                          autoplay
                                                          loop
                                                          muted
                                                          controls={false}
                                                          playsinline
                                                          src={"/video/" + v}
                                                          preload="auto"
                                                          poster={
                                                              "/video/" +
                                                              v.replace(
                                                                  /\.\w+$/,
                                                                  ".png",
                                                              )
                                                          }
                                                      />
                                                  </li>
                                              ))
                                            : null}
                                        {prj.img
                                            ? prj.img.map((i) => (
                                                  <li class="w-9/12 md:w-1/4 hover:scale-150 transition-transform">
                                                      <img
                                                          src={"/img/" + i}
                                                          loading="lazy"
                                                          decoding="async"
                                                      />
                                                  </li>
                                              ))
                                            : null}
                                    </ul>
                                ) : null}
                            </Link>
                        </li>
                    ))}
                </ul>
            </section>
        ))
    }

    <Link href="https://neovim.io" hover>
        <h2 class="surround-h2 text-3xl font-semibold">
            I use Neovim by the way.
        </h2>
        <img
            class="mt-8"
            decoding="async"
            loading="lazy"
            src="https://i.imgflip.com/8bcwbk.jpg"
            alt='Meme "Running a Chrome instance to edit JavaScript" "Look what they need to mimic a fraction of our power"'
        />
    </Link>
</Layout>
