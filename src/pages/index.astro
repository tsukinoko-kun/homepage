---
import Link from "../components/Link.astro";
import Layout from "../layouts/Layout.astro";

type Project = {
    name: string;
    description: string;
    link: string;
    tech: Array<
        | "bash"
        | "bevy"
        | "c"
        | "cpp"
        | "css"
        | "go"
        | "java"
        | "js"
        | "lua"
        | "nestjs"
        | "papermc"
        | "parcel"
        | "preact"
        | "qdrant"
        | "rabbitmq"
        | "react"
        | "rollup"
        | "rs"
        | "sass"
        | "sdl"
        | "svelte"
        | "tailwind"
        | "ts"
        | "vim"
        | "webpack"
    >;
    video?: string[];
    img?: string[];
};

const portfolio: Array<Project> = [
    {
        name: "Mageanoid",
        description:
            "Twin stick shooter game where you play as a mage fighting against hordes of skeletons.",
        link: "https://github.com/bloodmagesoftware/mageanoid",
        tech: ["rs", "bevy"],
        video: ["mageanoid.webm"],
    },
    {
        name: "mandelbaum.ai (dynabase Technologies GmbH)",
        description:
            "Discover a cost-effective AI search solution for your e-commerce webshop with mandelbaum.ai. Improve your customers' search experience with our advanced, easy-to-integrate technology.",
        link: "https://mandelbaum.ai/",
        tech: [
            "ts",
            "nestjs",
            "svelte",
            "tailwind",
            "qdrant",
            "webpack",
            "rabbitmq",
        ],
        img: ["mandelbaum.avif"],
    },
    {
        name: "Bloodmage Engine",
        description: "90s style 3D game engine built in Go using SDL2.",
        link: "https://github.com/bloodmagesoftware/bloodmage-engine",
        tech: ["go", "sdl"],
        video: ["bloodmage_engine.webm"],
    },
    {
        name: "PaperMC Web API",
        description:
            "Secure web api for Minecraft paper servers with OAuth2 and JWT.",
        link: "https://github.com/tsukinoko-kun/papermc-web-api",
        tech: ["java", "papermc"],
    },
    {
        name: "Yab",
        description:
            "Cross-platform build tool with deterministic builds defined using Lua scripts.",
        link: "https://github.com/tsukinoko-kun/yab",
        tech: ["go", "lua"],
    },
    {
        name: "Oh My Gosh",
        description: "Cross platform implementation of a POSIX shell.",
        link: "https://github.com/tsukinoko-kun/ohmygosh",
        tech: ["go"],
    },
    {
        name: "squoosh (Google Chrome Labs)",
        description:
            "Make images smaller using best-in-class codecs, right in the browser.",
        link: "https://github.com/GoogleChromeLabs/squoosh",
        tech: ["ts", "js", "cpp", "rs", "preact", "css", "rollup"],
        img: ["squoosh.app_editor.avif"],
    },
    {
        name: "neovim node-client",
        description: "Nvim Node.js client and plugin host",
        link: "https://github.com/neovim/node-client",
        tech: ["ts"],
    },
    {
        name: "Allybi (Heilbronn University)",
        description:
            "Educational game for the anti discrimination organization in Heilbronn.",
        link: "https://github.com/HHN-SEB-2022-23/allybi",
        tech: ["ts", "sass", "parcel"],
        video: ["allybi.webm"],
    },
];
---

<Layout title="Portfolio" desc="Software Engineer">
    <div class="surround-h1">
        <h1 class="tracking-tight text-5xl font-semibold">
            Hey,<br />
            I'm Frank
        </h1>
    </div>

    <p class="text-pretty">
        Software engineer from Germany who loves things that just work.
    </p>

    <section aria-labelledby="projects">
        <h2 id="projects" class="surround-h2 text-3xl font-semibold">
            Projects
        </h2>
        <ul>
            {
                portfolio.map((prj) => (
                    <li class="pl-8">
                        <Link href={prj.link} hover>
                            <h3 class="text-xl font-semibold surround-h3">
                                {prj.name}
                            </h3>
                            <p class="text-pretty">{prj.description}</p>
                            <div class="w-full gap-2 grid grid-cols-[auto_1fr]">
                                <span class="block col-auto">
                                    {prj.tech.length > 1
                                        ? "Technologies:"
                                        : "Technology:"}
                                </span>
                                <ul class="w-fit flex flex-row flex-wrap">
                                    {prj.tech.map((tech) => (
                                        <li class="block">
                                            <img
                                                class="inline-block w-6 h-6 mr-1"
                                                decoding="async"
                                                loading="lazy"
                                                src={"/tech/" + tech + ".svg"}
                                                alt={tech}
                                                title={tech}
                                            />
                                        </li>
                                    ))}
                                </ul>
                            </div>
                            {prj.video || prj.img ? (
                                <ul class="flex flex-row flex-wrap mt-2">
                                    {prj.video
                                        ? prj.video.map((v) => (
                                              <li class="w-9/12 md:w-1/3 aspect-auto">
                                                  <video
                                                      autoplay
                                                      loop
                                                      muted
                                                      controls={false}
                                                      playsinline
                                                      src={"/video/" + v}
                                                      preload="auto"
                                                      poster={
                                                          "/video/" +
                                                          v.replace(
                                                              /\.\w+$/,
                                                              ".png",
                                                          )
                                                      }
                                                  />
                                              </li>
                                          ))
                                        : null}
                                    {prj.img
                                        ? prj.img.map((i) => (
                                              <li class="w-9/12 md:w-1/3 aspect-auto">
                                                  <img
                                                      src={"/img/" + i}
                                                      loading="lazy"
                                                      decoding="async"
                                                  />
                                              </li>
                                          ))
                                        : null}
                                </ul>
                            ) : null}
                        </Link>
                    </li>
                ))
            }
        </ul>
    </section>
</Layout>
