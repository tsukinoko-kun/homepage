---
import Layout from "../../layouts/Layout.astro";
import { Image } from "astro:assets";
import previewImage from "../../assets/holistic_systems_architecture.png";
import coverImage from "../../assets/holistic_systems_architecture.webp";
import "../../styles/blog.scss";
---

<Layout
    title="Holistic Systems Architecture"
    desc="Ein komplexes System als untrennbare Einheit"
    class="blog"
    image={previewImage}
>
    <h1>Holistic Systems Architecture</h1>
    <p>Ein komplexes System als untrennbare Einheit.</p>

    <Image
        src={coverImage}
        class="mx-auto rounded-md antialiased"
        alt="Hände bewegen Objekte wie Puppenspieler, die Teile einer Software repräsentieren"
        style={`aspect-ratio: 3/2;`}
        draggable="false"
    />

    <p>
        In der Softwareentwicklung existiert ein gängiger Leitsatz: Der Plan
        überlebt den ersten Kontakt mit der Realität nie. Insbesondere bei
        großen, komplexen Systemen gilt die detaillierte Vorausplanung als
        aussichtslos. Man geht davon aus, dass unvorhergesehene Abhängigkeiten
        und sich ändernde Anforderungen jeden rigiden Entwurf unweigerlich zum
        Scheitern verurteilen. Diese Annahme ist nicht falsch, sie ist jedoch
        das Resultat einer bestimmten Betrachtungsweise.
    </p>

    <p>
        Die <em>Holistic Systems Architecture</em> ist eine Idee, die ich verfolge,
        um mir meine Persönlichkeit und meine angeborenen Talente bestmöglich zu
        Nutze zu machen. Ich denke, dass einiges davon auch anderen helfen kann,
        oder zumindest interessant ist.
    </p>
    <p>
        Dieser Artikel dient <b>nicht</b> dazu um vor Leuten aus dem Internet anzugeben.
        Ich werde hier unter anderem über meine persönlichen Talente sprechen, da
        die Methode aus diesen entstanden ist.
    </p>

    <h2>Das holistische Mindset</h2>

    <p>
        Die traditionelle Herangehensweise zerlegt ein System in seine
        Komponenten, optimiert diese einzeln und fügt sie anschließend zusammen.
        Probleme entstehen an den Nahtstellen, den unvorhergesehenen
        Interaktionen. Die Holistic Systems Architecture schlägt einen
        fundamental anderen Weg vor. Sie betrachtet ein Softwaresystem nicht als
        eine Ansammlung von Teilen, sondern als einen einzigen, kohärenten
        Organismus, der nur am Stück aufgebaut, erweitert und verändert werden
        kann. Jede Komponente, jede Datenleitung und jede Funktion existiert nur
        in Relation zum Ganzen.
    </p>

    <p>
        Dieser Paradigmenwechsel hat tiefgreifende Konsequenzen. Das Ziel ist
        nicht mehr, einen statischen, finalen Bauplan zu erstellen. Das Ziel
        ist, ein tiefes und präzises Verständnis für die innere Struktur und die
        Kausalzusammenhänge des Gesamtsystems zu entwickeln. Wenn dieses
        Verständnis existiert, verliert die Veränderung ihren Schrecken. Eine
        neue Anforderung ist kein Störfaktor mehr, der den Plan zerstört,
        sondern ein Impuls, der sich durch das System ausbreitet.
    </p>

    <p>
        Man kann sich das so vorstellen wie ein Autor, der seine Welt und deren
        Bewohner so gut kennt, dass er ohne darüber nachdenken zu müssen, sagen
        kann, wie die Welt auf ein bestimmtes Ereignis reagieren würde. Die Welt
        ist das System und das Ereignis ist ein Anforderungsänderung.
    </p>

    <p>
        Ich nenne diesen Ausbreitungsprozess <em>Resonanz</em> (weil es cool klingt).
        Die Aufgabe des Architekten ist es, die Resonanz einer Änderung zu sehen,
        also zu erkennen, welche Teile des Systems mitschwingen werden und warum.
        Dies ermöglicht eine Planung, die nicht auf der Unveränderlichkeit der Anforderungen,
        sondern auf der Vorhersehbarkeit der Systemdynamik beruht.
    </p>

    <h2>Jack of All Trades</h2>
    <figure class="hidden sm:block sm:float-right sm:ml-4">
        <img
            src="https://upload.wikimedia.org/wikipedia/commons/d/d0/Joker_black_02.svg"
            alt="Joker Karte"
            draggable="false"
        />
        <figcaption>
            <a href="https://commons.wikimedia.org/wiki/File:Joker_black_02.svg"
                >David Bellot</a
            >, <a href="http://www.gnu.org/licenses/lgpl.html">LGPL</a>,<br
            />via Wikimedia Commons
        </figcaption>
    </figure>
    <p>
        Um die Resonanz sehen zu können, muss der Architekt sich in allen
        Gebieten mindestens mittelmäßig gut auskennen, die seine Software
        berührt. Das reicht von Business über APIs und Frontends bis hin zu
        Datenbanken, Sicherheit und Algorithmen.
    </p>
    <p>
        Er muss in <b>jedem</b> Bereich so gut sein, wie jemand, der sich nur mit
        dem jeweiligen Bereich beschäftigt.
    </p>

    <p>
        Das mag nach Humbug klingen. Natürlich ist es schwierig umzusetzen und
        es bedarf auch eines gewissen Talentes, sich so viele verschiedene
        Bereiche erfolgreich anzueignen. Mit genug Fleiß, sollte das aber ein
        erreichbares Ziel sein.
    </p>

    <h2>Meine persönliche Situation</h2>
    <p>
        Ich habe mein Ziel noch nicht ganz erreicht. In Data Science habe ich
        nur sehr grundlegende Kenntnisse und mit komplexer Infrastruktur
        (Operations mit großen K8s Clustern und vielen externen Services
        beispielsweise) habe ich kaum echte Erfahrung. Dennoch reicht mein
        Können aus und ich kann ich die Holistic Systems Architecture einsetzen.
    </p>
    <p>
        Mir fällt es schwer, aktiv über etwas nachzudenken. Dafür habe ich eine
        starke Intuition, die wie ein Hintergrundprozess läuft und sich ab und
        zu mit Erkenntnissen meldet. Das Erkennen der Resonanz läuft bei mir
        vollständig über diese Intuition.
    </p>
</Layout>
