---
import Layout from "../layouts/Layout.astro";
import Link from "../components/Link.astro";
import RadarChart from "../components/RadarChart.astro";

type Experience = {
    from: string;
    to: string;
    title: string;
    description?: string;
    company: string;
    companyUrl?: string;
};

function compareDateString(a: string, b: string) {
    const [monthA, yearA] = a.split("/").map((s) => parseInt(s)) as [
        number,
        number,
    ];
    const [monthB, yearB] = b.split("/").map((s) => parseInt(s)) as [
        number,
        number,
    ];

    if (yearA < yearB) {
        return 1;
    } else if (yearA > yearB) {
        return -1;
    } else {
        if (monthA < monthB) {
            return 1;
        } else if (monthA > monthB) {
            return -1;
        } else {
            return 0;
        }
    }
}

const work: Array<Experience> = [
    {
        from: "03/2025",
        to: "07/2025",
        title: "Software Engineer",
        description:
            "System architecture, development of a monitoring and debugging system, tools integration",
        company: "A. Leistenschneider GmbH",
        companyUrl: "https://www.foto-leistenschneider.de/",
    },
    {
        from: "03/2025",
        to: "in progress",
        title: "Founder",
        description: "Project management, development, supervision of interns",
        company: "Bloodmage Software (Mayer & Ott GbR)",
        companyUrl: "https://bloodmagesoftware.de/",
    },
    {
        from: "02/2024",
        to: "in progress",
        title: "Co-Founder",
        description: "Responsible for the company's technical direction",
        company: "enyDyne (Decsi Mayer Rieser GbR)",
        companyUrl: "https://enydyne.de/",
    },
    {
        from: "10/2024",
        to: "02/2025",
        title: "Tutor",
        description:
            "Lecture assistance and additional teaching units alongside the lecture",
        company: "Heilbronn University",
        companyUrl: "https://www.hs-heilbronn.de/",
    },
    {
        from: "03/2024",
        to: "07/2024",
        title: "Software Engineer",
        description: "Machine learning and web crawler development",
        company: "dynabase Technologies GmbH",
        companyUrl: "https://www.dynabase.de",
    },
    {
        from: "09/2023",
        to: "02/2024",
        title: "Tutor",
        description: "Supervise student group projects",
        company: "Heilbronn University",
        companyUrl: "https://www.hs-heilbronn.de/",
    },
    {
        from: "03/2023",
        to: "07/2023",
        title: "Research Assistant",
        description:
            "Takeover and further development of scientific project in the field of artificial intelligence",
        company: "Heilbronn University",
        companyUrl: "https://www.hs-heilbronn.de/",
    },
    {
        from: "08/2022",
        to: "12/2022",
        title: "DevOps Engineer",
        description: "IT Operations and infrastructure",
        company: "LogiSoft-S GmbH Heilbronn",
    },
];

const openSource: Array<Experience> = [
    {
        from: "07/2023",
        to: "07/2023",
        title: "node-client",
        company: "Neovim",
        companyUrl: "https://neovim.io/",
    },
    {
        from: "04/2023",
        to: "04/2023",
        title: "squoosh",
        company: "Google Chrome Labs",
        companyUrl: "https://github.com/GoogleChromeLabs",
    },
];

const education: Array<Experience> = [
    {
        from: "09/2022",
        to: "in progress",
        title: "Bachelor of Science (Software Engineering)",
        company: "Heilbronn University",
        companyUrl: "https://www.hs-heilbronn.de/",
    },
    {
        from: "09/2019",
        to: "07/2022",
        title: "Apprenticeship as Software Developer",
        company: "LogiSoft-S GmbH Heilbronn",
    },
    {
        from: "09/2017",
        to: "07/2019",
        title: "Technical Diploma",
        company: "Wilhelm Maybach Schule Heilbronn",
        companyUrl: "https://www.wms-hn.de/",
    },
];

const experience = [
    {
        title: "Work",
        description: "I worked here as an employee",
        items: work,
    },
    {
        title: "Open Source",
        description:
            "Large, well-known open source projects to which I contributed",
        items: openSource,
    },
    {
        title: "Education",
        description: "School and stuff",
        items: education,
    },
];
---

<Layout title="Resume" desc="Previous experiences">
    <h1 class="text-5xl font-semibold tracking-tight surround-h1">Resume</h1>

    <h2 id="skills" class="text-3xl font-semibold surround-h2">
        My Skills in a Nutshell
    </h2>
    <RadarChart />

    {
        experience.map((e) => (
            <section class="break-inside-avoid-page">
                <h2
                    id={e.title.toLowerCase()}
                    class="text-3xl font-semibold surround-h2"
                >
                    {e.title}
                </h2>
                <p class="my-4 text-ctp-subtext0 text-pretty">
                    {e.description}
                </p>
                <ul class="space-y-4">
                    {e.items
                        .sort(
                            (a, b) =>
                                compareDateString(a.from, b.from) ||
                                compareDateString(a.to, b.to),
                        )
                        .map((exp: Experience) => (
                            <li>
                                <div class="flex flex-col justify-between pl-4 md:flex-row">
                                    <div class="flex flex-col md:flex-1">
                                        <span class="font-bold text-pretty">
                                            {exp.title}
                                        </span>
                                        {exp.description ? (
                                            <span class="text-pretty">
                                                {exp.description}
                                            </span>
                                        ) : null}
                                        {exp.companyUrl ? (
                                            <Link
                                                class="underline"
                                                href={exp.companyUrl}
                                            >
                                                {exp.company}
                                            </Link>
                                        ) : (
                                            <span>{exp.company}</span>
                                        )}{" "}
                                    </div>
                                    <div class="md:flex-1">
                                        {exp.from} through {exp.to}
                                    </div>
                                </div>
                            </li>
                        ))}
                </ul>
            </section>
        ))
    }
</Layout>
