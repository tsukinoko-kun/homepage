---
import Link from "./Link.astro";

type Nav = {
    href: string;
    text: string;
};

export interface Props {
    nav: Array<Nav>;
    current: string;
}

let currentPath = new URL(Astro.url.href).pathname;
if (currentPath.length >= 2 && currentPath.endsWith("/")) {
    currentPath = currentPath.slice(0, -1);
}

const nav = Astro.props.nav;
---

<header class="content bg-background sticky top-0 z-50">
    <nav class="surround-nav">
        {
            nav.map((item) =>
                item.href === currentPath ? (
                    <Link
                        href={item.href}
                        class="underline hover:text-primary hidden sm:block md:inline-block md:mr-4"
                    >
                        {item.text}
                    </Link>
                ) : (
                    <Link
                        href={item.href}
                        class="underline hover:text-primary block md:inline-block md:mr-4"
                    >
                        {item.text}
                    </Link>
                ),
            )
        }
    </nav>
</header>

<style>
    header {
        padding: 0.5rem max(0.5rem, calc(50vw - 40em)) !important;
        background-image: url(/img/me.svg);
        background-size: 4rem;
        background-repeat: no-repeat;
        background-position-x: calc(100% - 0.5rem);
        background-position-y: 1rem;
    }
</style>
