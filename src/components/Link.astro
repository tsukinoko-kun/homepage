---
import { joinClassNames } from "../utils";
export interface Props {
    href: string;
    hover?: boolean;
    class?: string;
    title?: string;
    disabled?: boolean;
}

const target = Astro.props.href.startsWith("https://") ? "_blank" : undefined;
const rel = target ? "noopener noreferrer" : "prefetch";
const blockClass = Array.from(
    (Astro.props.class ?? "").matchAll(/[\w\-:]*block/g),
)
    .map((x) => x[0])
    .join(" ");
let anchorClass = blockClass || "inline-block";
if (!blockClass) {
    anchorClass = Astro.props.class = joinClassNames(
        Astro.props.class,
        "inline-block",
        Astro.props.hover ? "hov" : undefined,
    );
}
if (Astro.props.disabled) {
    anchorClass = joinClassNames(anchorClass, "disabled");
}
---

<a
    href={Astro.props.href}
    class={anchorClass}
    target={target}
    rel={rel}
    title={Astro.props.title}
>
    <span class={Astro.props.class}>
        <slot />
    </span>
</a>

<style>
    a {
        height: fit-content;
    }
    @media (hover: hover) {
        a:not(.disabled):hover > span {
            color: rgb(var(--color-primary));
        }
        a:not(.disabled).hov:hover > span {
            transform: translateX(1rem);
        }
        a:not(.disabled).hov > span {
            transition: transform 0.2s ease-in-out;
        }
    }
</style>
